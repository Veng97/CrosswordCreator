name: Build PyInstaller Executables

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  create_release:
    runs-on: ubuntu-22.04
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: v1.0.${{ github.run_number }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        python-version: [3.11]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    # Checkout repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Build executable
    - name: Build Executable
      run: |
        cd app
        pyinstaller --name crossword-creator --windowed --onefile --add-data "static:static" serve_with_gui.py

    # Upload release asset
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: "app/dist/crossword-creator${{ runner.os == 'Windows' && '.exe' || '' }}"
        asset_name: "crossword-creator-${{ runner.os }}${{ runner.os == 'Windows' && '.exe' || '' }}"
        asset_content_type: application/octet-stream