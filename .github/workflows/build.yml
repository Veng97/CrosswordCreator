name: Build PyInstaller Executables

on:
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, windows-latest, macos-latest]
        python-version: [3.11]

    steps:
    # Checkout repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Build executable
    - name: Build Executable
      run: |
        cd app
        pyinstaller --name crossword-creator-${{ matrix.os }} --windowed --onefile --add-data "static:static" serve_with_gui.py

    # Archive the executable
    - name: Archive Executable
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: mv dist/crossword-creator-${{ matrix.os }} crossword-creator-${{ matrix.os }}-linux

      if: ${{ matrix.os == 'windows-latest' }}
      run: mv dist/crossword-creator-${{ matrix.os }} crossword-creator-${{ matrix.os }}-windows.exe

      if: ${{ matrix.os == 'macos-latest' }}
      run: mv dist/crossword-creator-${{ matrix.os }} crossword-creator-${{ matrix.os }}-mac

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: built-executables-${{ matrix.os }}
        path: |
          crossword-creator-linux
          crossword-creator-windows.exe
          crossword-creator-mac
